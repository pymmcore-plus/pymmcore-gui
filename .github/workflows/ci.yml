name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  workflow_dispatch:

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest
  pyright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - run: uv sync
      - run: uv run pyright

  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    env:
      UV_FROZEN: true
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-13, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync

      - uses: pyvista/setup-headless-display-action@v3
        with:
          qt: true

      - name: Set cache path
        shell: bash
        run: |
          set -e
          CACHE_PATH=$(uv run python -c 'from pymmcore_plus import install; print(install.USER_DATA_MM_PATH)')
          echo "CACHE_PATH=$CACHE_PATH" >> $GITHUB_ENV

      - name: Cache Drivers
        id: cache-mm-build
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ runner.os }}-mmbuild

      - name: Install Micro-Manager
        if: steps.cache-mm-build.outputs.cache-hit != 'true'
        run: uv run mmcore install

      - name: Test
        run: uv run pytest -v --cov=pymmcore_gui --cov-report=xml --color=yes

      - name: Coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
