name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  workflow_dispatch:

jobs:
  check-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run check-manifest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - run: uv sync
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files --verbose

  test:
    name: ${{ matrix.os }} py${{ matrix.python-version }}${{ matrix.qt }}
    runs-on: ${{ matrix.os }}
    env:
      UV_FROZEN: 1
      UV_NO_SYNC: 1
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: ["3.10", "3.12", "3.13"]
        qt: [""]
        include:
          - os: windows-latest
            python-version: "3.13"
            qt: "PySide6"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - uses: pymmcore-plus/setup-mm-test-adapters@main
      - uses: pyvista/setup-headless-display-action@v4
        with:
          qt: true

      - name: Install
        shell: bash
        run: |
          if [[ "${{ matrix.qt }}" == "PySide6" ]]; then
            uv sync --group PySide6 --no-install-package PyQt6 --no-install-package PyQt6Ads
          else
            uv sync
          fi

      - name: Test
        run: uv run coverage run -p -m pytest -v --color=yes

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: covreport-${{ matrix.os }}-py${{ matrix.python-version }}-${{ matrix.qt }}
          path: ./.coverage*
          include-hidden-files: true

  upload_coverage:
    if: always()
    needs: [test]
    uses: pyapp-kit/workflows/.github/workflows/upload-coverage.yml@v2
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}
