ci:
  autoupdate_schedule: monthly
  autofix_commit_msg: "style(pre-commit.ci): auto fixes [...]"
  autoupdate_commit_msg: "ci(pre-commit.ci): autoupdate"

repos:
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.23
    hooks:
      - id: validate-pyproject

  - repo: https://github.com/crate-ci/typos
    rev: typos-dict-v0.12.4
    hooks:
      - id: typos
        args: [--force-exclude] # omitting --write-changes

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        args: [
            --disable=MD033, # no-inline-html
          ]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.4
    hooks:
      - id: ruff
        args: [--fix, --unsafe-fixes]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.1
    hooks:
      - id: mypy
        files: "^src/"
        # The dependencies are listed here in a somewhat unusual way...
        # pre-commit.ci has a strict limit of 250MB for the entire environment
        # which is much smaller than all of the transitive dependencies of this repo
        # so we use --no-deps, and then add just enough to make sure we cover all of
        # our typing use cases.  Note also the custom PyQt6-stubs repo.
        additional_dependencies:
          - "--no-deps"
          # required for mypy
          - mypy
          - typing_extensions
          - mypy_extensions
          # required for mypy to find the installed packages
          - cmap
          - git+https://github.com/tlambert03/PyQt6-stubs.git@v6.7.3
          - iconify
          - ipykernel
          - ipython
          - ndv
          - pygfx
          - pydantic
          - pydantic_core
          - pymmcore
          - pymmcore-plus>=0.13.2
          - pymmcore-widgets
          - pyyaml
          - qtconsole
          - rich
          - superqt
          - tifffile
          - tqdm
          - traitlets
          - types-Pygments
          - types-PyYAML
          - zarr<3.0

  # as an alternative to that annoying list of packages,
  # pyright can use a virtual environment to find the installed packages
  # here we direct it to look in the current directory for a .venv folder
  # however, this won't work for pre-commit.ci (because of environment creation limits)
  # so we use stages: [manual], and run it manually in ci.yml
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.393
    hooks:
      - id: pyright
        files: "^src/"
        args: [--venvpath, "."]
        stages: [manual]
