# https://peps.python.org/pep-0517/
[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

# https://hatch.pypa.io/latest/config/metadata/
[tool.hatch.version]
source = "vcs"

# read more about configuring hatch at:
# https://hatch.pypa.io/latest/config/build/
[tool.hatch.build.targets.wheel]
only-include = ["src"]
sources = ["src"]

# https://peps.python.org/pep-0621/
[project]
name = "pymmcore-gui"
dynamic = ["version"]
description = "A Micro-Manager GUI based on pymmcore-widgets and pymmcore-plus."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "BSD-3-Clause" }
authors = [
    { email = "federico.gasparoli@gmail.com", name = "Federico Gasparoli" },
    { name = "Talley Lambert", email = "talley.lambert@gmail.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "ndv[pygfx]>=0.2.2",
    "pydantic-settings>=2.7.1",
    "pymmcore-plus[cli]>=0.13.2",
    "pymmcore-widgets>=0.9.0",
    "PyQt6==6.7.1",
    "pyright>=1.1.393",
    "pyyaml>=6.0.2",
    "qtconsole>=5.6.1",
    "rich",                         # also in pymmcore-plus[cli] above
    "superqt[cmap,iconify]>=0.7.1",
    "tifffile>=2024.12.12",
    "tqdm>=4.67.1",
    "zarr>=2.18.3,<3.0",
]

# TO USE pymmcore-nano, you need to add pymmcore-nano to dependencies
# and uncomment the override-dependencies line below
# currently, pymmcore-nano has some issues related to threading that need to be solved
# 
# "pymmcore-nano",
# [tool.uv]
# override-dependencies = ["pymmcore ;  sys_platform == 'never'"]

[dependency-groups]
dev = [
    "ipython>=8.30.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "pyautogui>=0.9.54",
    "pyinstaller>=6.11.1",
    "pyright>=1.1.392.post0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-qt>=4.4.0",
    "rich>=13.9.4",
    "ruff>=0.8.3",
    "rust-just>=1.38.0",
    "types-pyautogui>=0.9.3.20241230",
    "types-pygments>=2.19.0.20250107",
    "types-pyinstaller>=6.11.0.20241028",
    "types-pyyaml>=6.0.12.20241230",
]

[tool.hatch.metadata]
allow-direct-references = true

# same as console_scripts entry point
[project.scripts]
mmgui = "pymmcore_gui._app:main"

[project.urls]
homepage = "https://github.com/tlambert03/pymmcore-gui"
repository = "https://github.com/tlambert03/pymmcore-gui"


# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src"]

# https://docs.astral.sh/ruff/rules
[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "W",    # style warnings
    "F",    # flakes
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "RUF",  # ruff-specific rules
    "TC",   # flake8-type-checking
    "TID",  # flake8-tidy-imports
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D401", # First line should be in imperative mood (remove to opt in)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = false # default is false

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["qtconsole.*", "pydevd.*", "pygfx.*", "rendercanvas.*"]
ignore_missing_imports = true

[tool.pyright]
include = ["src", "tests"]
pythonVersion = "3.10"
enableExperimentalFeatures = true
verboseOutput = true
venv = ".venv"

# https://docs.pytest.org/
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
filterwarnings = ["error"]

# https://coverage.readthedocs.io/
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "\\.\\.\\.",
    "raise NotImplementedError()",
    "pass",
]

[tool.coverage.run]
source = ["pymmcore_gui"]

[tool.check-manifest]
ignore = [".pre-commit-config.yaml", ".ruff_cache/**/*", "tests/**/*"]

[tool.typos.default]
extend-ignore-identifiers-re = ["(?i)nd2?.*", "(?i)ome"]

[tool.typos.files]
extend-exclude = ["*.spec", "hooks/"]
